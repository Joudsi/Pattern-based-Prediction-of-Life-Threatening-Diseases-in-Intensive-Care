{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "data = pd.read_csv('/Users/joudsi/Desktop/output.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Unnamed: 0', 'subject_id', 'hadm_id', 'icu', 'amdission_age',\n",
       "       'gender', 'thirty_day_mort', 'heartrate_mean', 'meanbp_mean',\n",
       "       'sysbp_mean', 'tempc_mean', 'spo2_mean', 'resprate_mean',\n",
       "       'diasbp_mean', 'creatinine_mean', 'potassium_mean', 'sodium_mean',\n",
       "       'chloride_mean', 'bicarbonate_mean', 'hematocrit_mean', 'wbc_mean',\n",
       "       'glucose_mean', 'lactate_mean', 'aniongap_mean', 'albumin_mean',\n",
       "       'bands_mean', 'bilirubin_mean', 'hemoglobin_mean', 'ptt_mean',\n",
       "       'inr_mean', 'pt_mean', 'bun_mean', 'is_AKI', 'is_Betablocker'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>subject_id</th>\n",
       "      <th>hadm_id</th>\n",
       "      <th>icu</th>\n",
       "      <th>amdission_age</th>\n",
       "      <th>gender</th>\n",
       "      <th>thirty_day_mort</th>\n",
       "      <th>heartrate_mean</th>\n",
       "      <th>meanbp_mean</th>\n",
       "      <th>sysbp_mean</th>\n",
       "      <th>...</th>\n",
       "      <th>albumin_mean</th>\n",
       "      <th>bands_mean</th>\n",
       "      <th>bilirubin_mean</th>\n",
       "      <th>hemoglobin_mean</th>\n",
       "      <th>ptt_mean</th>\n",
       "      <th>inr_mean</th>\n",
       "      <th>pt_mean</th>\n",
       "      <th>bun_mean</th>\n",
       "      <th>is_AKI</th>\n",
       "      <th>is_Betablocker</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>26264</td>\n",
       "      <td>163486</td>\n",
       "      <td>211181</td>\n",
       "      <td>58.5394</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>88.464286</td>\n",
       "      <td>90.333333</td>\n",
       "      <td>143.200000</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15.400000</td>\n",
       "      <td>24.9</td>\n",
       "      <td>1.2</td>\n",
       "      <td>13.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>86580</td>\n",
       "      <td>145497</td>\n",
       "      <td>285183</td>\n",
       "      <td>53.3505</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>115.125000</td>\n",
       "      <td>80.260870</td>\n",
       "      <td>111.217391</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.4</td>\n",
       "      <td>9.600000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>28410</td>\n",
       "      <td>146362</td>\n",
       "      <td>282162</td>\n",
       "      <td>80.7914</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>91.909091</td>\n",
       "      <td>70.035714</td>\n",
       "      <td>120.413793</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.866667</td>\n",
       "      <td>37.1</td>\n",
       "      <td>1.3</td>\n",
       "      <td>15.1</td>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>61683</td>\n",
       "      <td>197678</td>\n",
       "      <td>237242</td>\n",
       "      <td>61.1226</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>106.521739</td>\n",
       "      <td>76.772727</td>\n",
       "      <td>117.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.2</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>27.3</td>\n",
       "      <td>1.1</td>\n",
       "      <td>11.4</td>\n",
       "      <td>132.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>23626</td>\n",
       "      <td>166653</td>\n",
       "      <td>230856</td>\n",
       "      <td>61.6232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>44.896552</td>\n",
       "      <td>73.180328</td>\n",
       "      <td>107.344262</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.7</td>\n",
       "      <td>11.866667</td>\n",
       "      <td>26.1</td>\n",
       "      <td>1.1</td>\n",
       "      <td>13.1</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0  subject_id  hadm_id     icu  amdission_age  gender  \\\n",
       "0           0       26264   163486  211181        58.5394       0   \n",
       "1           1       86580   145497  285183        53.3505       0   \n",
       "2           2       28410   146362  282162        80.7914       0   \n",
       "3           3       61683   197678  237242        61.1226       0   \n",
       "4           4       23626   166653  230856        61.6232       0   \n",
       "\n",
       "   thirty_day_mort  heartrate_mean  meanbp_mean  sysbp_mean       ...        \\\n",
       "0                1       88.464286    90.333333  143.200000       ...         \n",
       "1                1      115.125000    80.260870  111.217391       ...         \n",
       "2                1       91.909091    70.035714  120.413793       ...         \n",
       "3                1      106.521739    76.772727  117.000000       ...         \n",
       "4                0       44.896552    73.180328  107.344262       ...         \n",
       "\n",
       "   albumin_mean  bands_mean  bilirubin_mean  hemoglobin_mean  ptt_mean  \\\n",
       "0           NaN         NaN             NaN        15.400000      24.9   \n",
       "1           NaN         NaN             0.4         9.600000       NaN   \n",
       "2           NaN         NaN             NaN         6.866667      37.1   \n",
       "3           3.0         NaN             0.2        12.000000      27.3   \n",
       "4           NaN         NaN             0.7        11.866667      26.1   \n",
       "\n",
       "   inr_mean  pt_mean  bun_mean  is_AKI  is_Betablocker  \n",
       "0       1.2     13.2       8.0       0               1  \n",
       "1       NaN      NaN      18.0       0               0  \n",
       "2       1.3     15.1      18.0       1               0  \n",
       "3       1.1     11.4     132.5       1               0  \n",
       "4       1.1     13.1      21.0       0               0  \n",
       "\n",
       "[5 rows x 34 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>subject_id</th>\n",
       "      <th>hadm_id</th>\n",
       "      <th>icu</th>\n",
       "      <th>amdission_age</th>\n",
       "      <th>gender</th>\n",
       "      <th>thirty_day_mort</th>\n",
       "      <th>heartrate_mean</th>\n",
       "      <th>meanbp_mean</th>\n",
       "      <th>sysbp_mean</th>\n",
       "      <th>...</th>\n",
       "      <th>albumin_mean</th>\n",
       "      <th>bands_mean</th>\n",
       "      <th>bilirubin_mean</th>\n",
       "      <th>hemoglobin_mean</th>\n",
       "      <th>ptt_mean</th>\n",
       "      <th>inr_mean</th>\n",
       "      <th>pt_mean</th>\n",
       "      <th>bun_mean</th>\n",
       "      <th>is_AKI</th>\n",
       "      <th>is_Betablocker</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>12467.000000</td>\n",
       "      <td>12467.000000</td>\n",
       "      <td>12467.000000</td>\n",
       "      <td>12467.000000</td>\n",
       "      <td>12467.000000</td>\n",
       "      <td>12467.000000</td>\n",
       "      <td>12467.000000</td>\n",
       "      <td>12433.000000</td>\n",
       "      <td>12432.000000</td>\n",
       "      <td>12422.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>6100.000000</td>\n",
       "      <td>2710.000000</td>\n",
       "      <td>7403.000000</td>\n",
       "      <td>12333.000000</td>\n",
       "      <td>11271.000000</td>\n",
       "      <td>11315.000000</td>\n",
       "      <td>11316.000000</td>\n",
       "      <td>12353.000000</td>\n",
       "      <td>12467.000000</td>\n",
       "      <td>12467.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>6233.000000</td>\n",
       "      <td>38630.683725</td>\n",
       "      <td>149823.922515</td>\n",
       "      <td>250382.545841</td>\n",
       "      <td>66.831487</td>\n",
       "      <td>0.467554</td>\n",
       "      <td>0.410203</td>\n",
       "      <td>88.337630</td>\n",
       "      <td>76.168888</td>\n",
       "      <td>116.463336</td>\n",
       "      <td>...</td>\n",
       "      <td>2.958234</td>\n",
       "      <td>10.588819</td>\n",
       "      <td>2.234980</td>\n",
       "      <td>10.654637</td>\n",
       "      <td>38.966710</td>\n",
       "      <td>1.625585</td>\n",
       "      <td>16.776565</td>\n",
       "      <td>32.733548</td>\n",
       "      <td>0.427208</td>\n",
       "      <td>0.48103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3599.057238</td>\n",
       "      <td>29480.507137</td>\n",
       "      <td>28797.845972</td>\n",
       "      <td>28802.744521</td>\n",
       "      <td>16.628257</td>\n",
       "      <td>0.498966</td>\n",
       "      <td>0.491890</td>\n",
       "      <td>16.760893</td>\n",
       "      <td>11.337419</td>\n",
       "      <td>17.244430</td>\n",
       "      <td>...</td>\n",
       "      <td>0.675008</td>\n",
       "      <td>10.441675</td>\n",
       "      <td>5.140846</td>\n",
       "      <td>1.873165</td>\n",
       "      <td>19.295306</td>\n",
       "      <td>1.066585</td>\n",
       "      <td>7.503983</td>\n",
       "      <td>24.974152</td>\n",
       "      <td>0.494693</td>\n",
       "      <td>0.49966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>100003.000000</td>\n",
       "      <td>200003.000000</td>\n",
       "      <td>16.980400</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>34.844828</td>\n",
       "      <td>24.535714</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>14.400000</td>\n",
       "      <td>0.800000</td>\n",
       "      <td>9.300000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>3116.500000</td>\n",
       "      <td>14209.500000</td>\n",
       "      <td>125266.000000</td>\n",
       "      <td>225610.500000</td>\n",
       "      <td>55.653800</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>76.200000</td>\n",
       "      <td>68.392469</td>\n",
       "      <td>104.105733</td>\n",
       "      <td>...</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.400000</td>\n",
       "      <td>9.335714</td>\n",
       "      <td>27.500000</td>\n",
       "      <td>1.150000</td>\n",
       "      <td>13.300000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>6233.000000</td>\n",
       "      <td>28140.000000</td>\n",
       "      <td>149618.000000</td>\n",
       "      <td>250740.000000</td>\n",
       "      <td>68.932800</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>87.400000</td>\n",
       "      <td>74.763257</td>\n",
       "      <td>113.500000</td>\n",
       "      <td>...</td>\n",
       "      <td>2.950000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>0.700000</td>\n",
       "      <td>10.450000</td>\n",
       "      <td>32.450000</td>\n",
       "      <td>1.300000</td>\n",
       "      <td>14.587500</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>9349.500000</td>\n",
       "      <td>63363.500000</td>\n",
       "      <td>175202.500000</td>\n",
       "      <td>275543.500000</td>\n",
       "      <td>80.016500</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>99.620690</td>\n",
       "      <td>82.875000</td>\n",
       "      <td>126.912055</td>\n",
       "      <td>...</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>1.600000</td>\n",
       "      <td>11.825000</td>\n",
       "      <td>42.300000</td>\n",
       "      <td>1.650000</td>\n",
       "      <td>17.066667</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>12466.000000</td>\n",
       "      <td>99991.000000</td>\n",
       "      <td>199999.000000</td>\n",
       "      <td>299998.000000</td>\n",
       "      <td>91.400000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>163.875000</td>\n",
       "      <td>133.000000</td>\n",
       "      <td>195.343750</td>\n",
       "      <td>...</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>80.900000</td>\n",
       "      <td>19.600000</td>\n",
       "      <td>150.000000</td>\n",
       "      <td>32.400000</td>\n",
       "      <td>150.000000</td>\n",
       "      <td>265.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows Ã— 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Unnamed: 0    subject_id        hadm_id            icu  \\\n",
       "count  12467.000000  12467.000000   12467.000000   12467.000000   \n",
       "mean    6233.000000  38630.683725  149823.922515  250382.545841   \n",
       "std     3599.057238  29480.507137   28797.845972   28802.744521   \n",
       "min        0.000000      3.000000  100003.000000  200003.000000   \n",
       "25%     3116.500000  14209.500000  125266.000000  225610.500000   \n",
       "50%     6233.000000  28140.000000  149618.000000  250740.000000   \n",
       "75%     9349.500000  63363.500000  175202.500000  275543.500000   \n",
       "max    12466.000000  99991.000000  199999.000000  299998.000000   \n",
       "\n",
       "       amdission_age        gender  thirty_day_mort  heartrate_mean  \\\n",
       "count   12467.000000  12467.000000     12467.000000    12433.000000   \n",
       "mean       66.831487      0.467554         0.410203       88.337630   \n",
       "std        16.628257      0.498966         0.491890       16.760893   \n",
       "min        16.980400      0.000000         0.000000       34.844828   \n",
       "25%        55.653800      0.000000         0.000000       76.200000   \n",
       "50%        68.932800      0.000000         0.000000       87.400000   \n",
       "75%        80.016500      1.000000         1.000000       99.620690   \n",
       "max        91.400000      1.000000         1.000000      163.875000   \n",
       "\n",
       "        meanbp_mean    sysbp_mean       ...        albumin_mean   bands_mean  \\\n",
       "count  12432.000000  12422.000000       ...         6100.000000  2710.000000   \n",
       "mean      76.168888    116.463336       ...            2.958234    10.588819   \n",
       "std       11.337419     17.244430       ...            0.675008    10.441675   \n",
       "min       24.535714     46.000000       ...            1.000000     0.900000   \n",
       "25%       68.392469    104.105733       ...            2.500000     3.000000   \n",
       "50%       74.763257    113.500000       ...            2.950000     7.000000   \n",
       "75%       82.875000    126.912055       ...            3.400000    15.000000   \n",
       "max      133.000000    195.343750       ...            5.600000    69.000000   \n",
       "\n",
       "       bilirubin_mean  hemoglobin_mean      ptt_mean      inr_mean  \\\n",
       "count     7403.000000     12333.000000  11271.000000  11315.000000   \n",
       "mean         2.234980        10.654637     38.966710      1.625585   \n",
       "std          5.140846         1.873165     19.295306      1.066585   \n",
       "min          0.100000         4.000000     14.400000      0.800000   \n",
       "25%          0.400000         9.335714     27.500000      1.150000   \n",
       "50%          0.700000        10.450000     32.450000      1.300000   \n",
       "75%          1.600000        11.825000     42.300000      1.650000   \n",
       "max         80.900000        19.600000    150.000000     32.400000   \n",
       "\n",
       "            pt_mean      bun_mean        is_AKI  is_Betablocker  \n",
       "count  11316.000000  12353.000000  12467.000000     12467.00000  \n",
       "mean      16.776565     32.733548      0.427208         0.48103  \n",
       "std        7.503983     24.974152      0.494693         0.49966  \n",
       "min        9.300000      2.000000      0.000000         0.00000  \n",
       "25%       13.300000     16.000000      0.000000         0.00000  \n",
       "50%       14.587500     25.000000      0.000000         0.00000  \n",
       "75%       17.066667     42.000000      1.000000         1.00000  \n",
       "max      150.000000    265.000000      1.000000         1.00000  \n",
       "\n",
       "[8 rows x 34 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 12467 entries, 0 to 12466\n",
      "Data columns (total 34 columns):\n",
      "Unnamed: 0          12467 non-null int64\n",
      "subject_id          12467 non-null int64\n",
      "hadm_id             12467 non-null int64\n",
      "icu                 12467 non-null int64\n",
      "amdission_age       12467 non-null float64\n",
      "gender              12467 non-null int64\n",
      "thirty_day_mort     12467 non-null int64\n",
      "heartrate_mean      12433 non-null float64\n",
      "meanbp_mean         12432 non-null float64\n",
      "sysbp_mean          12422 non-null float64\n",
      "tempc_mean          12256 non-null float64\n",
      "spo2_mean           12410 non-null float64\n",
      "resprate_mean       12423 non-null float64\n",
      "diasbp_mean         12421 non-null float64\n",
      "creatinine_mean     12354 non-null float64\n",
      "potassium_mean      12366 non-null float64\n",
      "sodium_mean         12364 non-null float64\n",
      "chloride_mean       12355 non-null float64\n",
      "bicarbonate_mean    12337 non-null float64\n",
      "hematocrit_mean     12348 non-null float64\n",
      "wbc_mean            12323 non-null float64\n",
      "glucose_mean        12363 non-null float64\n",
      "lactate_mean        9106 non-null float64\n",
      "aniongap_mean       12287 non-null float64\n",
      "albumin_mean        6100 non-null float64\n",
      "bands_mean          2710 non-null float64\n",
      "bilirubin_mean      7403 non-null float64\n",
      "hemoglobin_mean     12333 non-null float64\n",
      "ptt_mean            11271 non-null float64\n",
      "inr_mean            11315 non-null float64\n",
      "pt_mean             11316 non-null float64\n",
      "bun_mean            12353 non-null float64\n",
      "is_AKI              12467 non-null int64\n",
      "is_Betablocker      12467 non-null int64\n",
      "dtypes: float64(26), int64(8)\n",
      "memory usage: 3.2 MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(12467, 34)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "# data['ptt_min'].fillna(0, inplace = True)\n",
    "\n",
    "data['heartrate_mean'].fillna(data['heartrate_mean'].mean(), inplace = True)       \n",
    "          \n",
    "data['meanbp_mean'].fillna(data['meanbp_mean'].mean(), inplace = True)          \n",
    "           \n",
    "data['sysbp_mean'].fillna(data['sysbp_mean'].mean(), inplace = True)           \n",
    "          \n",
    "data['tempc_mean'].fillna(data['tempc_mean'].mean(), inplace = True)           \n",
    "           \n",
    "data['spo2_mean'].fillna(data['spo2_mean'].mean(), inplace = True)            \n",
    "      \n",
    "data['resprate_mean'].fillna(data['resprate_mean'].mean(), inplace = True)        \n",
    "         \n",
    "data['diasbp_mean'].fillna(data['diasbp_mean'].mean(), inplace = True)          \n",
    "\n",
    "# data['glucose_mean_vitals'].fillna(data['glucose_mean_vitals'].mean(), inplace = True)  \n",
    "    \n",
    "data['creatinine_mean'].fillna(data['creatinine_mean'].mean(), inplace = True)       \n",
    "     \n",
    "data['potassium_mean'].fillna(data['potassium_mean'].mean(), inplace = True)        \n",
    "   \n",
    "data['sodium_mean'].fillna(data['sodium_mean'].mean(), inplace = True)           \n",
    "       \n",
    "data['chloride_mean'].fillna(data['chloride_mean'].mean(), inplace = True)         \n",
    "\n",
    "data['bicarbonate_mean'].fillna(data['bicarbonate_mean'].mean(), inplace = True)      \n",
    "     \n",
    "data['hematocrit_mean'].fillna(data['hematocrit_mean'].mean(), inplace = True)       \n",
    "         \n",
    "data['wbc_mean'].fillna(data['wbc_mean'].mean(), inplace = True)              \n",
    "        \n",
    "data['glucose_mean'].fillna(data['glucose_mean'].mean(), inplace = True)          \n",
    " \n",
    "data['lactate_mean'].fillna(data['lactate_mean'].mean(), inplace = True)         \n",
    "     \n",
    "data['aniongap_mean'].fillna(data['aniongap_mean'].mean(), inplace = True)         \n",
    "    \n",
    "data['albumin_mean'].fillna(data['albumin_mean'].mean(), inplace = True)         \n",
    "       \n",
    "data['bands_mean'].fillna(data['bands_mean'].mean(), inplace = True)           \n",
    "\n",
    "data['bilirubin_mean'].fillna(data['bilirubin_mean'].mean(), inplace = True)       \n",
    "   \n",
    "data['hemoglobin_mean'].fillna(data['hemoglobin_mean'].mean(), inplace = True)       \n",
    "      \n",
    "data['ptt_mean'].fillna(data['ptt_mean'].mean(), inplace = True)              \n",
    "          \n",
    "data['inr_mean'].fillna(data['inr_mean'].mean(), inplace = True)              \n",
    "           \n",
    "data['pt_mean'].fillna(data['pt_mean'].mean(), inplace = True)               \n",
    "            \n",
    "data['bun_mean'].fillna(data['bun_mean'].mean(), inplace = True)              \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 12467 entries, 0 to 12466\n",
      "Data columns (total 34 columns):\n",
      "Unnamed: 0          12467 non-null int64\n",
      "subject_id          12467 non-null int64\n",
      "hadm_id             12467 non-null int64\n",
      "icu                 12467 non-null int64\n",
      "amdission_age       12467 non-null float64\n",
      "gender              12467 non-null int64\n",
      "thirty_day_mort     12467 non-null int64\n",
      "heartrate_mean      12467 non-null float64\n",
      "meanbp_mean         12467 non-null float64\n",
      "sysbp_mean          12467 non-null float64\n",
      "tempc_mean          12467 non-null float64\n",
      "spo2_mean           12467 non-null float64\n",
      "resprate_mean       12467 non-null float64\n",
      "diasbp_mean         12467 non-null float64\n",
      "creatinine_mean     12467 non-null float64\n",
      "potassium_mean      12467 non-null float64\n",
      "sodium_mean         12467 non-null float64\n",
      "chloride_mean       12467 non-null float64\n",
      "bicarbonate_mean    12467 non-null float64\n",
      "hematocrit_mean     12467 non-null float64\n",
      "wbc_mean            12467 non-null float64\n",
      "glucose_mean        12467 non-null float64\n",
      "lactate_mean        12467 non-null float64\n",
      "aniongap_mean       12467 non-null float64\n",
      "albumin_mean        12467 non-null float64\n",
      "bands_mean          12467 non-null float64\n",
      "bilirubin_mean      12467 non-null float64\n",
      "hemoglobin_mean     12467 non-null float64\n",
      "ptt_mean            12467 non-null float64\n",
      "inr_mean            12467 non-null float64\n",
      "pt_mean             12467 non-null float64\n",
      "bun_mean            12467 non-null float64\n",
      "is_AKI              12467 non-null int64\n",
      "is_Betablocker      12467 non-null int64\n",
      "dtypes: float64(26), int64(8)\n",
      "memory usage: 3.2 MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>subject_id</th>\n",
       "      <th>hadm_id</th>\n",
       "      <th>icu</th>\n",
       "      <th>amdission_age</th>\n",
       "      <th>gender</th>\n",
       "      <th>thirty_day_mort</th>\n",
       "      <th>heartrate_mean</th>\n",
       "      <th>meanbp_mean</th>\n",
       "      <th>sysbp_mean</th>\n",
       "      <th>...</th>\n",
       "      <th>albumin_mean</th>\n",
       "      <th>bands_mean</th>\n",
       "      <th>bilirubin_mean</th>\n",
       "      <th>hemoglobin_mean</th>\n",
       "      <th>ptt_mean</th>\n",
       "      <th>inr_mean</th>\n",
       "      <th>pt_mean</th>\n",
       "      <th>bun_mean</th>\n",
       "      <th>is_AKI</th>\n",
       "      <th>is_Betablocker</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>26264</td>\n",
       "      <td>163486</td>\n",
       "      <td>211181</td>\n",
       "      <td>58.5394</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>88.464286</td>\n",
       "      <td>90.333333</td>\n",
       "      <td>143.200000</td>\n",
       "      <td>...</td>\n",
       "      <td>2.958234</td>\n",
       "      <td>10.588819</td>\n",
       "      <td>2.23498</td>\n",
       "      <td>15.400000</td>\n",
       "      <td>24.90000</td>\n",
       "      <td>1.200000</td>\n",
       "      <td>13.200000</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>86580</td>\n",
       "      <td>145497</td>\n",
       "      <td>285183</td>\n",
       "      <td>53.3505</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>115.125000</td>\n",
       "      <td>80.260870</td>\n",
       "      <td>111.217391</td>\n",
       "      <td>...</td>\n",
       "      <td>2.958234</td>\n",
       "      <td>10.588819</td>\n",
       "      <td>0.40000</td>\n",
       "      <td>9.600000</td>\n",
       "      <td>38.96671</td>\n",
       "      <td>1.625585</td>\n",
       "      <td>16.776565</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>28410</td>\n",
       "      <td>146362</td>\n",
       "      <td>282162</td>\n",
       "      <td>80.7914</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>91.909091</td>\n",
       "      <td>70.035714</td>\n",
       "      <td>120.413793</td>\n",
       "      <td>...</td>\n",
       "      <td>2.958234</td>\n",
       "      <td>10.588819</td>\n",
       "      <td>2.23498</td>\n",
       "      <td>6.866667</td>\n",
       "      <td>37.10000</td>\n",
       "      <td>1.300000</td>\n",
       "      <td>15.100000</td>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>61683</td>\n",
       "      <td>197678</td>\n",
       "      <td>237242</td>\n",
       "      <td>61.1226</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>106.521739</td>\n",
       "      <td>76.772727</td>\n",
       "      <td>117.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>10.588819</td>\n",
       "      <td>0.20000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>27.30000</td>\n",
       "      <td>1.100000</td>\n",
       "      <td>11.400000</td>\n",
       "      <td>132.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>23626</td>\n",
       "      <td>166653</td>\n",
       "      <td>230856</td>\n",
       "      <td>61.6232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>44.896552</td>\n",
       "      <td>73.180328</td>\n",
       "      <td>107.344262</td>\n",
       "      <td>...</td>\n",
       "      <td>2.958234</td>\n",
       "      <td>10.588819</td>\n",
       "      <td>0.70000</td>\n",
       "      <td>11.866667</td>\n",
       "      <td>26.10000</td>\n",
       "      <td>1.100000</td>\n",
       "      <td>13.100000</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0  subject_id  hadm_id     icu  amdission_age  gender  \\\n",
       "0           0       26264   163486  211181        58.5394       0   \n",
       "1           1       86580   145497  285183        53.3505       0   \n",
       "2           2       28410   146362  282162        80.7914       0   \n",
       "3           3       61683   197678  237242        61.1226       0   \n",
       "4           4       23626   166653  230856        61.6232       0   \n",
       "\n",
       "   thirty_day_mort  heartrate_mean  meanbp_mean  sysbp_mean       ...        \\\n",
       "0                1       88.464286    90.333333  143.200000       ...         \n",
       "1                1      115.125000    80.260870  111.217391       ...         \n",
       "2                1       91.909091    70.035714  120.413793       ...         \n",
       "3                1      106.521739    76.772727  117.000000       ...         \n",
       "4                0       44.896552    73.180328  107.344262       ...         \n",
       "\n",
       "   albumin_mean  bands_mean  bilirubin_mean  hemoglobin_mean  ptt_mean  \\\n",
       "0      2.958234   10.588819         2.23498        15.400000  24.90000   \n",
       "1      2.958234   10.588819         0.40000         9.600000  38.96671   \n",
       "2      2.958234   10.588819         2.23498         6.866667  37.10000   \n",
       "3      3.000000   10.588819         0.20000        12.000000  27.30000   \n",
       "4      2.958234   10.588819         0.70000        11.866667  26.10000   \n",
       "\n",
       "   inr_mean    pt_mean  bun_mean  is_AKI  is_Betablocker  \n",
       "0  1.200000  13.200000       8.0       0               1  \n",
       "1  1.625585  16.776565      18.0       0               0  \n",
       "2  1.300000  15.100000      18.0       1               0  \n",
       "3  1.100000  11.400000     132.5       1               0  \n",
       "4  1.100000  13.100000      21.0       0               0  \n",
       "\n",
       "[5 rows x 34 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "subdata = data[['amdission_age',\n",
    "       'gender', 'thirty_day_mort', 'heartrate_mean', 'meanbp_mean',\n",
    "       'sysbp_mean', 'tempc_mean', 'spo2_mean', 'resprate_mean',\n",
    "       'diasbp_mean', 'creatinine_mean', 'potassium_mean', 'sodium_mean',\n",
    "       'chloride_mean', 'bicarbonate_mean', 'hematocrit_mean', 'wbc_mean',\n",
    "       'glucose_mean', 'lactate_mean', 'aniongap_mean', 'albumin_mean',\n",
    "       'bands_mean', 'bilirubin_mean', 'hemoglobin_mean', 'ptt_mean',\n",
    "       'inr_mean', 'pt_mean', 'bun_mean', 'is_AKI', 'is_Betablocker']]\n",
    "subdata_norm = (subdata - subdata.min()) / (subdata.max() - subdata.min())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n",
       "    n_clusters=8, n_init=10, n_jobs=None, precompute_distances='auto',\n",
       "    random_state=None, tol=0.0001, verbose=0)"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "from sklearn import datasets\n",
    "model=KMeans(n_clusters=8)\n",
    "model.fit(subdata_norm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([4, 3, 5, ..., 6, 6, 6], dtype=int32)"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 7.46081365e-01,  1.00000000e+00,  1.00000000e+00,\n",
       "         4.32954840e-01,  4.64047958e-01,  4.59671201e-01,\n",
       "         5.99512552e-01,  9.64509994e-01,  3.51547452e-01,\n",
       "         3.88576432e-01,  5.37791730e-02,  3.06040050e-01,\n",
       "         4.92110738e-01,  4.87737592e-01,  4.23103966e-01,\n",
       "         3.87329844e-01,  2.09318486e-02,  1.48833693e-01,\n",
       "         9.42710846e-02,  2.49151171e-01,  4.07868653e-01,\n",
       "         1.41752985e-01,  2.66889462e-02,  4.05671021e-01,\n",
       "         1.89489480e-01,  2.61714167e-02,  5.19374074e-02,\n",
       "         1.05919961e-01, -3.88578059e-16,  4.38650307e-01,\n",
       "        -1.09912079e-14],\n",
       "       [ 6.83664011e-01,  1.00000000e+00,  7.93809463e-15,\n",
       "         3.99204550e-01,  4.68288703e-01,  4.87364414e-01,\n",
       "         6.03024533e-01,  9.65724596e-01,  3.45823424e-01,\n",
       "         4.00950776e-01,  6.81488655e-02,  3.15946287e-01,\n",
       "         4.91568943e-01,  4.91659562e-01,  4.17724017e-01,\n",
       "         3.85246191e-01,  1.88986428e-02,  1.51021157e-01,\n",
       "         7.35150342e-02,  2.46401430e-01,  4.38293979e-01,\n",
       "         1.42517922e-01,  2.03740595e-02,  4.04463545e-01,\n",
       "         1.74184156e-01,  2.62931625e-02,  5.43121118e-02,\n",
       "         1.26646656e-01,  1.00000000e+00,  5.11940299e-01,\n",
       "         1.00000000e+00],\n",
       "       [ 5.83619068e-01, -6.05071548e-15,  1.09912079e-14,\n",
       "         4.16738623e-01,  4.84968854e-01,  4.70177830e-01,\n",
       "         6.29584714e-01,  9.66704737e-01,  3.45584126e-01,\n",
       "         4.43783038e-01,  5.87561711e-02,  3.12340914e-01,\n",
       "         4.89049571e-01,  4.93216053e-01,  4.32420714e-01,\n",
       "         4.26137190e-01,  1.86659767e-02,  1.43039113e-01,\n",
       "         7.57653110e-02,  2.23498885e-01,  4.39099537e-01,\n",
       "         1.43462879e-01,  2.26709424e-02,  4.61185305e-01,\n",
       "         1.61311224e-01,  2.24470160e-02,  4.90794960e-02,\n",
       "         9.73768054e-02,  3.95633653e-01,  1.14908083e-14,\n",
       "         1.00000000e+00],\n",
       "       [ 6.85704803e-01, -5.32907052e-15,  1.00000000e+00,\n",
       "         4.34710342e-01,  4.63967414e-01,  4.40524420e-01,\n",
       "         5.97738003e-01,  9.54886822e-01,  3.76819727e-01,\n",
       "         4.15951696e-01,  6.91598587e-02,  3.25716580e-01,\n",
       "         4.84526108e-01,  4.82147037e-01,  4.11095617e-01,\n",
       "         4.03983139e-01,  2.06014933e-02,  1.43426872e-01,\n",
       "         1.09047591e-01,  2.60653693e-01,  4.06194371e-01,\n",
       "         1.46781875e-01,  3.58173360e-02,  4.28057369e-01,\n",
       "         2.04597181e-01,  2.95857322e-02,  5.71297534e-02,\n",
       "         1.21816994e-01, -3.21964677e-15,  8.60422844e-15,\n",
       "        -5.77315973e-15],\n",
       "       [ 7.42871726e-01,  2.80672269e-01,  1.00000000e+00,\n",
       "         4.07677664e-01,  4.68174782e-01,  4.71665304e-01,\n",
       "         5.92971943e-01,  9.65992171e-01,  3.60201878e-01,\n",
       "         3.92785685e-01,  7.77400942e-02,  3.26388640e-01,\n",
       "         4.91984951e-01,  4.85808606e-01,  4.22310612e-01,\n",
       "         3.87656098e-01,  2.04252507e-02,  1.45437998e-01,\n",
       "         9.06533360e-02,  2.58055304e-01,  4.16288897e-01,\n",
       "         1.41099433e-01,  3.27254595e-02,  4.10314895e-01,\n",
       "         1.99001101e-01,  2.97401829e-02,  5.68472312e-02,\n",
       "         1.52074555e-01,  6.21288515e-01,  1.00000000e+00,\n",
       "        -9.99200722e-15],\n",
       "       [ 7.46146395e-01,  4.52589641e-01,  1.00000000e+00,\n",
       "         4.29750708e-01,  4.32794733e-01,  4.26907700e-01,\n",
       "         5.78020476e-01,  9.52710856e-01,  3.81523442e-01,\n",
       "         3.80318454e-01,  8.00948851e-02,  3.42598880e-01,\n",
       "         4.92046484e-01,  4.94322237e-01,  3.81763045e-01,\n",
       "         3.90325078e-01,  2.29024954e-02,  1.46485832e-01,\n",
       "         1.11291584e-01,  2.81498439e-01,  4.00690844e-01,\n",
       "         1.40981719e-01,  3.79401145e-02,  4.04404241e-01,\n",
       "         2.09685919e-01,  3.66688769e-02,  7.18462775e-02,\n",
       "         1.73126717e-01,  1.00000000e+00,  1.04916076e-14,\n",
       "        -1.06581410e-14],\n",
       "       [ 6.23253547e-01,  1.00000000e+00,  1.18238752e-14,\n",
       "         4.15149645e-01,  4.87092508e-01,  4.81320436e-01,\n",
       "         6.25744731e-01,  9.70367541e-01,  3.34496996e-01,\n",
       "         4.22600039e-01,  4.64056016e-02,  2.90345674e-01,\n",
       "         4.91426628e-01,  4.94500836e-01,  4.33979639e-01,\n",
       "         3.98672540e-01,  1.87735084e-02,  1.40623893e-01,\n",
       "         7.36559498e-02,  2.22294561e-01,  4.34084723e-01,\n",
       "         1.41830811e-01,  2.01160217e-02,  4.25905806e-01,\n",
       "         1.64013989e-01,  2.09665386e-02,  4.45479824e-02,\n",
       "         7.49420978e-02,  1.87072580e-14,  4.41871456e-01,\n",
       "         1.00000000e+00],\n",
       "       [ 6.22552648e-01, -6.10622664e-15,  1.14908083e-14,\n",
       "         3.99281951e-01,  5.07470439e-01,  5.00908429e-01,\n",
       "         6.18332842e-01,  9.69111297e-01,  3.37568152e-01,\n",
       "         4.44488706e-01,  7.19458086e-02,  3.17083370e-01,\n",
       "         4.90971031e-01,  4.91132275e-01,  4.31634571e-01,\n",
       "         4.17010199e-01,  1.81547502e-02,  1.46864388e-01,\n",
       "         7.89035931e-02,  2.35533438e-01,  4.38930208e-01,\n",
       "         1.41926111e-01,  2.40522178e-02,  4.50877506e-01,\n",
       "         1.74463586e-01,  2.37476690e-02,  4.94834131e-02,\n",
       "         1.11471121e-01,  4.35364042e-01,  1.00000000e+00,\n",
       "         1.00000000e+00]])"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.cluster_centers_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>amdission_age</th>\n",
       "      <th>gender</th>\n",
       "      <th>thirty_day_mort</th>\n",
       "      <th>heartrate_mean</th>\n",
       "      <th>meanbp_mean</th>\n",
       "      <th>sysbp_mean</th>\n",
       "      <th>tempc_mean</th>\n",
       "      <th>spo2_mean</th>\n",
       "      <th>resprate_mean</th>\n",
       "      <th>diasbp_mean</th>\n",
       "      <th>...</th>\n",
       "      <th>bands_mean</th>\n",
       "      <th>bilirubin_mean</th>\n",
       "      <th>hemoglobin_mean</th>\n",
       "      <th>ptt_mean</th>\n",
       "      <th>inr_mean</th>\n",
       "      <th>pt_mean</th>\n",
       "      <th>bun_mean</th>\n",
       "      <th>is_AKI</th>\n",
       "      <th>is_Betablocker</th>\n",
       "      <th>clust</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.558442</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.415558</td>\n",
       "      <td>0.606629</td>\n",
       "      <td>0.650847</td>\n",
       "      <td>0.659629</td>\n",
       "      <td>0.951354</td>\n",
       "      <td>0.333535</td>\n",
       "      <td>0.469208</td>\n",
       "      <td>...</td>\n",
       "      <td>0.142273</td>\n",
       "      <td>0.026423</td>\n",
       "      <td>0.730769</td>\n",
       "      <td>0.077434</td>\n",
       "      <td>0.012658</td>\n",
       "      <td>0.027719</td>\n",
       "      <td>0.022814</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.488717</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.622181</td>\n",
       "      <td>0.513765</td>\n",
       "      <td>0.436693</td>\n",
       "      <td>0.685280</td>\n",
       "      <td>0.952925</td>\n",
       "      <td>0.499622</td>\n",
       "      <td>0.555855</td>\n",
       "      <td>...</td>\n",
       "      <td>0.142273</td>\n",
       "      <td>0.003713</td>\n",
       "      <td>0.358974</td>\n",
       "      <td>0.181170</td>\n",
       "      <td>0.026126</td>\n",
       "      <td>0.053138</td>\n",
       "      <td>0.060837</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.857449</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.442255</td>\n",
       "      <td>0.419493</td>\n",
       "      <td>0.498272</td>\n",
       "      <td>0.530387</td>\n",
       "      <td>0.981238</td>\n",
       "      <td>0.322400</td>\n",
       "      <td>0.292970</td>\n",
       "      <td>...</td>\n",
       "      <td>0.142273</td>\n",
       "      <td>0.026423</td>\n",
       "      <td>0.183761</td>\n",
       "      <td>0.167404</td>\n",
       "      <td>0.015823</td>\n",
       "      <td>0.041222</td>\n",
       "      <td>0.060837</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.593153</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.555505</td>\n",
       "      <td>0.481606</td>\n",
       "      <td>0.475413</td>\n",
       "      <td>0.589088</td>\n",
       "      <td>0.989232</td>\n",
       "      <td>0.466964</td>\n",
       "      <td>0.471361</td>\n",
       "      <td>...</td>\n",
       "      <td>0.142273</td>\n",
       "      <td>0.001238</td>\n",
       "      <td>0.512821</td>\n",
       "      <td>0.095133</td>\n",
       "      <td>0.009494</td>\n",
       "      <td>0.014925</td>\n",
       "      <td>0.496198</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.599880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.077902</td>\n",
       "      <td>0.448485</td>\n",
       "      <td>0.410759</td>\n",
       "      <td>0.349842</td>\n",
       "      <td>0.996756</td>\n",
       "      <td>0.195976</td>\n",
       "      <td>0.381610</td>\n",
       "      <td>...</td>\n",
       "      <td>0.142273</td>\n",
       "      <td>0.007426</td>\n",
       "      <td>0.504274</td>\n",
       "      <td>0.086283</td>\n",
       "      <td>0.009494</td>\n",
       "      <td>0.027008</td>\n",
       "      <td>0.072243</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   amdission_age  gender  thirty_day_mort  heartrate_mean  meanbp_mean  \\\n",
       "0       0.558442     0.0              1.0        0.415558     0.606629   \n",
       "1       0.488717     0.0              1.0        0.622181     0.513765   \n",
       "2       0.857449     0.0              1.0        0.442255     0.419493   \n",
       "3       0.593153     0.0              1.0        0.555505     0.481606   \n",
       "4       0.599880     0.0              0.0        0.077902     0.448485   \n",
       "\n",
       "   sysbp_mean  tempc_mean  spo2_mean  resprate_mean  diasbp_mean  ...    \\\n",
       "0    0.650847    0.659629   0.951354       0.333535     0.469208  ...     \n",
       "1    0.436693    0.685280   0.952925       0.499622     0.555855  ...     \n",
       "2    0.498272    0.530387   0.981238       0.322400     0.292970  ...     \n",
       "3    0.475413    0.589088   0.989232       0.466964     0.471361  ...     \n",
       "4    0.410759    0.349842   0.996756       0.195976     0.381610  ...     \n",
       "\n",
       "   bands_mean  bilirubin_mean  hemoglobin_mean  ptt_mean  inr_mean   pt_mean  \\\n",
       "0    0.142273        0.026423         0.730769  0.077434  0.012658  0.027719   \n",
       "1    0.142273        0.003713         0.358974  0.181170  0.026126  0.053138   \n",
       "2    0.142273        0.026423         0.183761  0.167404  0.015823  0.041222   \n",
       "3    0.142273        0.001238         0.512821  0.095133  0.009494  0.014925   \n",
       "4    0.142273        0.007426         0.504274  0.086283  0.009494  0.027008   \n",
       "\n",
       "   bun_mean  is_AKI  is_Betablocker  clust  \n",
       "0  0.022814     0.0             1.0      4  \n",
       "1  0.060837     0.0             0.0      3  \n",
       "2  0.060837     1.0             0.0      5  \n",
       "3  0.496198     1.0             0.0      5  \n",
       "4  0.072243     0.0             0.0      2  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "md=pd.Series(model.labels_)\n",
    "subdata_norm['clust']=md\n",
    "subdata_norm.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6302.637877379381"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.inertia_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Frequency')"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.hist(subdata_norm['clust'])\n",
    "plt.title('Histogram of Clusters')\n",
    "plt.xlabel('Cluster')\n",
    "plt.ylabel('Frequency')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>amdission_age</th>\n",
       "      <th>gender</th>\n",
       "      <th>thirty_day_mort</th>\n",
       "      <th>heartrate_mean</th>\n",
       "      <th>meanbp_mean</th>\n",
       "      <th>sysbp_mean</th>\n",
       "      <th>tempc_mean</th>\n",
       "      <th>spo2_mean</th>\n",
       "      <th>resprate_mean</th>\n",
       "      <th>diasbp_mean</th>\n",
       "      <th>...</th>\n",
       "      <th>albumin_mean</th>\n",
       "      <th>bands_mean</th>\n",
       "      <th>bilirubin_mean</th>\n",
       "      <th>hemoglobin_mean</th>\n",
       "      <th>ptt_mean</th>\n",
       "      <th>inr_mean</th>\n",
       "      <th>pt_mean</th>\n",
       "      <th>bun_mean</th>\n",
       "      <th>is_AKI</th>\n",
       "      <th>is_Betablocker</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>clust</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.746081</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.432955</td>\n",
       "      <td>0.464048</td>\n",
       "      <td>0.459671</td>\n",
       "      <td>0.599513</td>\n",
       "      <td>0.964510</td>\n",
       "      <td>0.351547</td>\n",
       "      <td>0.388576</td>\n",
       "      <td>...</td>\n",
       "      <td>0.407869</td>\n",
       "      <td>0.141753</td>\n",
       "      <td>0.026689</td>\n",
       "      <td>0.405671</td>\n",
       "      <td>0.189489</td>\n",
       "      <td>0.026171</td>\n",
       "      <td>0.051937</td>\n",
       "      <td>0.105920</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.438650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.683664</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.399205</td>\n",
       "      <td>0.468289</td>\n",
       "      <td>0.487364</td>\n",
       "      <td>0.603025</td>\n",
       "      <td>0.965725</td>\n",
       "      <td>0.345823</td>\n",
       "      <td>0.400951</td>\n",
       "      <td>...</td>\n",
       "      <td>0.438294</td>\n",
       "      <td>0.142518</td>\n",
       "      <td>0.020374</td>\n",
       "      <td>0.404464</td>\n",
       "      <td>0.174184</td>\n",
       "      <td>0.026293</td>\n",
       "      <td>0.054312</td>\n",
       "      <td>0.126647</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.511940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.583619</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.416739</td>\n",
       "      <td>0.484969</td>\n",
       "      <td>0.470178</td>\n",
       "      <td>0.629585</td>\n",
       "      <td>0.966705</td>\n",
       "      <td>0.345584</td>\n",
       "      <td>0.443783</td>\n",
       "      <td>...</td>\n",
       "      <td>0.439100</td>\n",
       "      <td>0.143463</td>\n",
       "      <td>0.022671</td>\n",
       "      <td>0.461185</td>\n",
       "      <td>0.161311</td>\n",
       "      <td>0.022447</td>\n",
       "      <td>0.049079</td>\n",
       "      <td>0.097377</td>\n",
       "      <td>0.395634</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.685705</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.434710</td>\n",
       "      <td>0.463967</td>\n",
       "      <td>0.440524</td>\n",
       "      <td>0.597738</td>\n",
       "      <td>0.954887</td>\n",
       "      <td>0.376820</td>\n",
       "      <td>0.415952</td>\n",
       "      <td>...</td>\n",
       "      <td>0.406194</td>\n",
       "      <td>0.146782</td>\n",
       "      <td>0.035817</td>\n",
       "      <td>0.428057</td>\n",
       "      <td>0.204597</td>\n",
       "      <td>0.029586</td>\n",
       "      <td>0.057130</td>\n",
       "      <td>0.121817</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.742872</td>\n",
       "      <td>0.280672</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.407678</td>\n",
       "      <td>0.468175</td>\n",
       "      <td>0.471665</td>\n",
       "      <td>0.592972</td>\n",
       "      <td>0.965992</td>\n",
       "      <td>0.360202</td>\n",
       "      <td>0.392786</td>\n",
       "      <td>...</td>\n",
       "      <td>0.416289</td>\n",
       "      <td>0.141099</td>\n",
       "      <td>0.032725</td>\n",
       "      <td>0.410315</td>\n",
       "      <td>0.199001</td>\n",
       "      <td>0.029740</td>\n",
       "      <td>0.056847</td>\n",
       "      <td>0.152075</td>\n",
       "      <td>0.621289</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.746146</td>\n",
       "      <td>0.452590</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.429751</td>\n",
       "      <td>0.432795</td>\n",
       "      <td>0.426908</td>\n",
       "      <td>0.578020</td>\n",
       "      <td>0.952711</td>\n",
       "      <td>0.381523</td>\n",
       "      <td>0.380318</td>\n",
       "      <td>...</td>\n",
       "      <td>0.400691</td>\n",
       "      <td>0.140982</td>\n",
       "      <td>0.037940</td>\n",
       "      <td>0.404404</td>\n",
       "      <td>0.209686</td>\n",
       "      <td>0.036669</td>\n",
       "      <td>0.071846</td>\n",
       "      <td>0.173127</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.623254</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.415150</td>\n",
       "      <td>0.487093</td>\n",
       "      <td>0.481320</td>\n",
       "      <td>0.625745</td>\n",
       "      <td>0.970368</td>\n",
       "      <td>0.334497</td>\n",
       "      <td>0.422600</td>\n",
       "      <td>...</td>\n",
       "      <td>0.434085</td>\n",
       "      <td>0.141831</td>\n",
       "      <td>0.020116</td>\n",
       "      <td>0.425906</td>\n",
       "      <td>0.164014</td>\n",
       "      <td>0.020967</td>\n",
       "      <td>0.044548</td>\n",
       "      <td>0.074942</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.441871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.622553</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.399282</td>\n",
       "      <td>0.507470</td>\n",
       "      <td>0.500908</td>\n",
       "      <td>0.618333</td>\n",
       "      <td>0.969111</td>\n",
       "      <td>0.337568</td>\n",
       "      <td>0.444489</td>\n",
       "      <td>...</td>\n",
       "      <td>0.438930</td>\n",
       "      <td>0.141926</td>\n",
       "      <td>0.024052</td>\n",
       "      <td>0.450878</td>\n",
       "      <td>0.174464</td>\n",
       "      <td>0.023748</td>\n",
       "      <td>0.049483</td>\n",
       "      <td>0.111471</td>\n",
       "      <td>0.435364</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows Ã— 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       amdission_age    gender  thirty_day_mort  heartrate_mean  meanbp_mean  \\\n",
       "clust                                                                          \n",
       "0           0.746081  1.000000              1.0        0.432955     0.464048   \n",
       "1           0.683664  1.000000              0.0        0.399205     0.468289   \n",
       "2           0.583619  0.000000              0.0        0.416739     0.484969   \n",
       "3           0.685705  0.000000              1.0        0.434710     0.463967   \n",
       "4           0.742872  0.280672              1.0        0.407678     0.468175   \n",
       "5           0.746146  0.452590              1.0        0.429751     0.432795   \n",
       "6           0.623254  1.000000              0.0        0.415150     0.487093   \n",
       "7           0.622553  0.000000              0.0        0.399282     0.507470   \n",
       "\n",
       "       sysbp_mean  tempc_mean  spo2_mean  resprate_mean  diasbp_mean  \\\n",
       "clust                                                                  \n",
       "0        0.459671    0.599513   0.964510       0.351547     0.388576   \n",
       "1        0.487364    0.603025   0.965725       0.345823     0.400951   \n",
       "2        0.470178    0.629585   0.966705       0.345584     0.443783   \n",
       "3        0.440524    0.597738   0.954887       0.376820     0.415952   \n",
       "4        0.471665    0.592972   0.965992       0.360202     0.392786   \n",
       "5        0.426908    0.578020   0.952711       0.381523     0.380318   \n",
       "6        0.481320    0.625745   0.970368       0.334497     0.422600   \n",
       "7        0.500908    0.618333   0.969111       0.337568     0.444489   \n",
       "\n",
       "            ...        albumin_mean  bands_mean  bilirubin_mean  \\\n",
       "clust       ...                                                   \n",
       "0           ...            0.407869    0.141753        0.026689   \n",
       "1           ...            0.438294    0.142518        0.020374   \n",
       "2           ...            0.439100    0.143463        0.022671   \n",
       "3           ...            0.406194    0.146782        0.035817   \n",
       "4           ...            0.416289    0.141099        0.032725   \n",
       "5           ...            0.400691    0.140982        0.037940   \n",
       "6           ...            0.434085    0.141831        0.020116   \n",
       "7           ...            0.438930    0.141926        0.024052   \n",
       "\n",
       "       hemoglobin_mean  ptt_mean  inr_mean   pt_mean  bun_mean    is_AKI  \\\n",
       "clust                                                                      \n",
       "0             0.405671  0.189489  0.026171  0.051937  0.105920  0.000000   \n",
       "1             0.404464  0.174184  0.026293  0.054312  0.126647  1.000000   \n",
       "2             0.461185  0.161311  0.022447  0.049079  0.097377  0.395634   \n",
       "3             0.428057  0.204597  0.029586  0.057130  0.121817  0.000000   \n",
       "4             0.410315  0.199001  0.029740  0.056847  0.152075  0.621289   \n",
       "5             0.404404  0.209686  0.036669  0.071846  0.173127  1.000000   \n",
       "6             0.425906  0.164014  0.020967  0.044548  0.074942  0.000000   \n",
       "7             0.450878  0.174464  0.023748  0.049483  0.111471  0.435364   \n",
       "\n",
       "       is_Betablocker  \n",
       "clust                  \n",
       "0            0.438650  \n",
       "1            0.511940  \n",
       "2            0.000000  \n",
       "3            0.000000  \n",
       "4            1.000000  \n",
       "5            0.000000  \n",
       "6            0.441871  \n",
       "7            1.000000  \n",
       "\n",
       "[8 rows x 30 columns]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subdata_norm.groupby('clust').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.15"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
